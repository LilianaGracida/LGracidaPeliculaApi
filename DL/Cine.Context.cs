//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CineEntities : DbContext
    {
        public CineEntities()
            : base("name=CineEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cine> Cines { get; set; }
        public virtual DbSet<Zona> Zonas { get; set; }
    
        public virtual int CineAdd(string nombre, string direccion, Nullable<decimal> venta, Nullable<int> idZona)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("Venta", venta) :
                new ObjectParameter("Venta", typeof(decimal));
    
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CineAdd", nombreParameter, direccionParameter, ventaParameter, idZonaParameter);
        }
    
        public virtual int CineDelete(Nullable<int> idCine)
        {
            var idCineParameter = idCine.HasValue ?
                new ObjectParameter("IdCine", idCine) :
                new ObjectParameter("IdCine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CineDelete", idCineParameter);
        }
    
        public virtual ObjectResult<CineGetAll_Result> CineGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CineGetAll_Result>("CineGetAll");
        }
    
        public virtual ObjectResult<CineGetById_Result> CineGetById(Nullable<int> idCine)
        {
            var idCineParameter = idCine.HasValue ?
                new ObjectParameter("IdCine", idCine) :
                new ObjectParameter("IdCine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CineGetById_Result>("CineGetById", idCineParameter);
        }
    
        public virtual int CineUpdate(Nullable<int> idCine, string nombre, string direccion, Nullable<decimal> venta, Nullable<int> idZona)
        {
            var idCineParameter = idCine.HasValue ?
                new ObjectParameter("IdCine", idCine) :
                new ObjectParameter("IdCine", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("Venta", venta) :
                new ObjectParameter("Venta", typeof(decimal));
    
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CineUpdate", idCineParameter, nombreParameter, direccionParameter, ventaParameter, idZonaParameter);
        }
    
        public virtual int ZonaAdd(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ZonaAdd", nombreParameter);
        }
    
        public virtual ObjectResult<ZonaGetAll_Result> ZonaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZonaGetAll_Result>("ZonaGetAll");
        }
    
        public virtual ObjectResult<ZonaGetById_Result> ZonaGetById(Nullable<int> idZona)
        {
            var idZonaParameter = idZona.HasValue ?
                new ObjectParameter("IdZona", idZona) :
                new ObjectParameter("IdZona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZonaGetById_Result>("ZonaGetById", idZonaParameter);
        }
    
        public virtual ObjectResult<VentaZona_Result> VentaZona()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaZona_Result>("VentaZona");
        }
    
        public virtual ObjectResult<VentaZona2_Result> VentaZona2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaZona2_Result>("VentaZona2");
        }
    
        public virtual ObjectResult<VentaZona3_Result> VentaZona3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaZona3_Result>("VentaZona3");
        }
    
        public virtual ObjectResult<VentaZona4_Result> VentaZona4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaZona4_Result>("VentaZona4");
        }
    }
}
