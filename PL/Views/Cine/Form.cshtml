@model ML.Cine
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Formulario</h2>
        </div>
    </div>



    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Cine", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                @Html.ValidationSummary(true, "Please fix te following errors.")

                <div class="hidden">
                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.IdCine)
                        @Html.TextBoxFor(model => model.IdCine, new { @class = "form-control", })
                        @Html.ValidationMessageFor(model => model.IdCine)

                    </div>
                </div>

                <hr />
                <div class="hidden">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Latitud)
                        @Html.TextBoxFor(model => model.Latitud, new { @class = "form-control", @id = "txtLatitud", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Latitud)

                    </div>
                </div>



                <div class="hidden">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Longitud)
                        @Html.TextBoxFor(model => model.Longitud, new { @class = "form-control", @id = "txtLongitud", @readonly = true })
                        @Html.ValidationMessageFor(model => model.Longitud)

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Nombre)
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                        @Html.ValidationMessageFor(model => model.Nombre)

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion)
                        @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @id = "txtDescripcion" })
                        @Html.ValidationMessageFor(model => model.Direccion)

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.Venta)
                        @Html.TextBoxFor(model => model.Venta, new { @class = "form-control", @id = "txtVenta", @placeholder = "Venta", @onkeypress = "return SoloNumeros(event,'txtVenta')" })
                        @Html.ValidationMessageFor(model => model.Venta)

                    </div>
                </div>


                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Zona.Zonas, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Zona.IdZona, new SelectList(Model.Zona.Zonas, "IdZona", "Nombre"), "Selecciona una opción", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Zona.Zonas, null, new { @class = "text-danger" })
                    </div>
                </div>



                <h3><b>SELECCIONA EN EL MAPA LA UBICACIÓN QUE DESEA DAR DE ALTA</b></h3>

                <div id="map"></div>

                <div class="form-group">

                    <div class="col-md-3">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Cine", htmlAttributes: new { @class = "btn btn-danger" })

                    </div>

                </div>
            }

        </div>
    </div>

    <style>
        #map {
            height: 350px;
            width: 50%;
        }
    </style>

        <script src="http://code.jquery.com/jquery-latest.min.js" type="text/javascript"></script>
        <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
        <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
        <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw&callback=initMap&libraries=&v=weekly&sensor=false" defer></script>

        <script type="text/javascript" src="https://maps.google.com/maps/api/js"></script>
        <script type="text/javascript">
           function initMap() {

            if ($("#txtLatitud").val() == 0 && $("#txtLongitud").val() == 0) {

                myLatlng = { lat: 19.59761, lng: -99.18054 };
            } else {

                myLatlng = { lat: 19.59761, lng: -99.18054 };
            }

            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 11,
                center: myLatlng,
            });
                // Create the initial InfoWindow.
                let infoWindow = new google.maps.InfoWindow({
                    content: "Presiona la locación",
                    position: myLatlng,
                });
                infoWindow.open(map);
                // Configure the click listener.
                //obtener direccion
                google.maps.event.addListener(map, 'click', function (event) {
                    var geocoder = new google.maps.Geocoder();
                    geocoder.geocode({
                        'latLng': event.latLng
                    }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            if (results[0]) {
                                $("#txtDescripcion").val(results[0].formatted_address);
                            }
                        }
                    });
                });
                //obtener cordenadas
                map.addListener("click", (mapsMouseEvent) => {
                    // Close the current InfoWindow.
                    infoWindow.close();
                    // Create a new InfoWindow.
                    infoWindow = new google.maps.InfoWindow({
                        position: mapsMouseEvent.latLng,
                    });
                    infoWindow.setContent(
                        JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)
                    );
                    infoWindow.open(map);
                    var Latitud = mapsMouseEvent.latLng.lat();
                    var Longitud = mapsMouseEvent.latLng.lng();
                    $("#txtLatitud").val(Latitud);
                    $("#txtLongitud").val(Longitud);
                });
            }
            window.initMap = initMap;
        </script>
  
